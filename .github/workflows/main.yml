name: Build an angular project 
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1


      # - uses : actions-hub/docker/cli@master
      # - uses: actions-hub/docker/login@master
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      #     DOCKER_REGISTRY_URL: docker.pkg.github.com

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}




      # - name: Login to github registry
      #   uses: actions-hub/docker/login@master
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      #     DOCKER_REGISTRY_URL: docker.pkg.github.com

      # - name : build docker image
      #   uses : actions-hub/docker/cli@master
      #   with :
      #     args : build -t docker.pkg.github.com/${{ github.repository }}/angulardevops:0.1 .

      # - name: Push to github registry
      #   uses: actions-hub/docker@master
      #   with:
      #     args: push docker.pkg.github.com/${{ github.repository }}/angulardevops:0.1    



      - name : push to staging server with ssh
        env :
            SSHPASS : ${{ secrets.SSHPASS }}
        run : |
            sudo apt-get update 
            sudo apt-get install sshpass -y
            export SSHPASS=$SSHPASS
            npm install -g @angular/cli@6.2
            npm ci --debug
            ng build --prod
            cd dist/my-first-app/
            sudo sshpass  scp -v -p $SSPASS -o stricthostkeychecking=no -r *.* root@51.38.38.79:/usr/share/nginx/html

               
      # - name: push to heroku
      #   env : 
      #       HEROKU_REGISTRY_URL: registry.heroku.com
      #       HEROKU_TOKEN : ${{ secrets.HEROKU_TOKEN }}
      #   run : |
      #       docker login --username=_ --password $HEROKU_TOKEN $HEROKU_REGISTRY_URL
      #       export HEROKU_API_KEY=$HEROKU_TOKEN
      #       heroku container:login
      #       heroku container:push web --app angulardevops
      #       heroku container:release web --app angulardevops
      #       heroku ps:scale web=1 --app angulardevops


          